{
  "address": "HmjG7ud6QzqUpMg32y4qzv7X1LjF8PDTc3wgTZXPRK6M",
  "metadata": {
    "name": "aim_staking_program_v2",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "docs": [
    "# AIM Staking Program",
    "",
    "A flexible staking program on Solana built with Anchor.",
    "This program allows a platform authority to manage multiple staking projects.",
    "Each project has its own configuration for staking tokens, fees, and vaults.",
    "Users can stake tokens for various durations and receive rewards (rewards not implemented yet).",
    "It supports standard unstaking after a lock-up period and an emergency unstake option."
  ],
  "instructions": [
    {
      "name": "emergency_unstake",
      "docs": [
        "Performs an emergency unstake, allowing withdrawal before the lock-up period ends.",
        "",
        "This instruction allows a user to bypass the lock-up period but incurs a potentially",
        "higher fee. It transfers the tokens back to the user (minus fees) and closes the",
        "`UserStakeInfo` account.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context for this instruction.",
        "* `_stake_id` - The ID of the stake to unstake (used for PDA derivation)."
      ],
      "discriminator": [
        123,
        69,
        168,
        195,
        183,
        213,
        199,
        214
      ],
      "accounts": [
        {
          "name": "project_config"
        },
        {
          "name": "stake_info",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  116,
                  97,
                  107,
                  101
                ]
              },
              {
                "kind": "account",
                "path": "project_config"
              },
              {
                "kind": "account",
                "path": "user"
              },
              {
                "kind": "arg",
                "path": "stake_id"
              }
            ]
          }
        },
        {
          "name": "user",
          "writable": true,
          "signer": true,
          "relations": [
            "stake_info"
          ]
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "project_config.project_id",
                "account": "ProjectConfig"
              }
            ]
          }
        },
        {
          "name": "vault_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116,
                  45,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "project_config.project_id",
                "account": "ProjectConfig"
              }
            ]
          }
        },
        {
          "name": "fee_wallet",
          "writable": true
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "_stake_id",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_platform",
      "docs": [
        "Initializes the staking platform.",
        "",
        "This must be the first instruction called. It sets up a singleton `PlatformConfig`",
        "account that holds global platform settings and tracks the number of projects.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context for this instruction, including the authority and accounts to initialize.",
        "",
        "# Errors",
        "",
        "Returns an error if the platform is already initialized."
      ],
      "discriminator": [
        119,
        201,
        101,
        45,
        75,
        122,
        89,
        3
      ],
      "accounts": [
        {
          "name": "platform_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  108,
                  97,
                  116,
                  102,
                  111,
                  114,
                  109
                ]
              }
            ]
          }
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "register_project",
      "docs": [
        "Registers a new staking project on the platform.",
        "",
        "This can only be called by the platform authority. It creates a new `ProjectConfig`",
        "account, a token vault for the project, and increments the platform's project counter.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context for this instruction.",
        "* `name` - A human-readable name for the project (max 32 characters).",
        "",
        "# Errors",
        "",
        "Returns `NameTooLong` if the provided name exceeds 32 characters."
      ],
      "discriminator": [
        130,
        150,
        121,
        216,
        183,
        225,
        243,
        192
      ],
      "accounts": [
        {
          "name": "platform_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  108,
                  97,
                  116,
                  102,
                  111,
                  114,
                  109
                ]
              }
            ]
          }
        },
        {
          "name": "project_config",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  114,
                  111,
                  106,
                  101,
                  99,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "platform_config.project_count",
                "account": "PlatformConfig"
              }
            ]
          }
        },
        {
          "name": "token_mint"
        },
        {
          "name": "vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "platform_config.project_count",
                "account": "PlatformConfig"
              }
            ]
          }
        },
        {
          "name": "vault_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116,
                  45,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "platform_config.project_count",
                "account": "PlatformConfig"
              }
            ]
          }
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true,
          "relations": [
            "platform_config"
          ]
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program"
        },
        {
          "name": "rent",
          "address": "SysvarRent111111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "name",
          "type": "string"
        }
      ]
    },
    {
      "name": "stake",
      "docs": [
        "Stakes a specified amount of tokens for a user.",
        ""
      ],
      "discriminator": [
        206,
        176,
        202,
        18,
        200,
        209,
        179,
        108
      ],
      "accounts": [
        {
          "name": "project_config"
        },
        {
          "name": "stake_info",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  116,
                  97,
                  107,
                  101
                ]
              },
              {
                "kind": "account",
                "path": "project_config"
              },
              {
                "kind": "account",
                "path": "user"
              },
              {
                "kind": "arg",
                "path": "stake_id"
              }
            ]
          }
        },
        {
          "name": "user",
          "writable": true,
          "signer": true
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "vault",
          "writable": true,
          "relations": [
            "project_config"
          ]
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        },
        {
          "name": "duration_days",
          "type": "u32"
        },
        {
          "name": "stake_id",
          "type": "u64"
        }
      ]
    },
    {
      "name": "unstake",
      "docs": [
        "Unstakes tokens after the lock-up period has ended.",
        "",
        "This instruction checks if the lock-up duration has passed. If so, it transfers",
        "the staked tokens back to the user, minus any applicable fees. The `UserStakeInfo`",
        "account is closed, and the rent is refunded to the user.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context for this instruction.",
        "* `_stake_id` - The ID of the stake to unstake (used for PDA derivation).",
        "",
        "# Errors",
        "",
        "Returns `LockupPeriodNotEnded` if the stake is still locked."
      ],
      "discriminator": [
        90,
        95,
        107,
        42,
        205,
        124,
        50,
        225
      ],
      "accounts": [
        {
          "name": "project_config"
        },
        {
          "name": "stake_info",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  115,
                  116,
                  97,
                  107,
                  101
                ]
              },
              {
                "kind": "account",
                "path": "project_config"
              },
              {
                "kind": "account",
                "path": "user"
              },
              {
                "kind": "arg",
                "path": "stake_id"
              }
            ]
          }
        },
        {
          "name": "user",
          "writable": true,
          "signer": true,
          "relations": [
            "stake_info"
          ]
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "project_config.project_id",
                "account": "ProjectConfig"
              }
            ]
          }
        },
        {
          "name": "vault_authority",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  118,
                  97,
                  117,
                  108,
                  116,
                  45,
                  97,
                  117,
                  116,
                  104,
                  111,
                  114,
                  105,
                  116,
                  121
                ]
              },
              {
                "kind": "account",
                "path": "project_config.project_id",
                "account": "ProjectConfig"
              }
            ]
          }
        },
        {
          "name": "fee_wallet",
          "writable": true
        },
        {
          "name": "token_program"
        }
      ],
      "args": [
        {
          "name": "_stake_id",
          "type": "u64"
        }
      ]
    },
    {
      "name": "update_project_config",
      "docs": [
        "Updates the configuration of an existing project.",
        "",
        "This can only be called by the project's authority. It allows updating the",
        "fee wallet, unstake fee, and emergency unstake fee.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context for this instruction.",
        "* `fee_wallet` - The new public key of the wallet to receive fees.",
        "* `unstake_fee_bps` - The new fee in basis points for normal unstaking.",
        "* `emergency_unstake_fee_bps` - The new fee in basis points for emergency unstaking."
      ],
      "discriminator": [
        92,
        158,
        238,
        143,
        67,
        224,
        25,
        155
      ],
      "accounts": [
        {
          "name": "project_config",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true,
          "relations": [
            "project_config"
          ]
        }
      ],
      "args": [
        {
          "name": "fee_wallet",
          "type": "pubkey"
        },
        {
          "name": "unstake_fee_bps",
          "type": "u16"
        },
        {
          "name": "emergency_unstake_fee_bps",
          "type": "u16"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "PlatformConfig",
      "discriminator": [
        160,
        78,
        128,
        0,
        248,
        83,
        230,
        160
      ]
    },
    {
      "name": "ProjectConfig",
      "discriminator": [
        187,
        239,
        0,
        110,
        5,
        15,
        245,
        65
      ]
    },
    {
      "name": "UserStakeInfo",
      "discriminator": [
        219,
        233,
        236,
        123,
        28,
        113,
        89,
        56
      ]
    }
  ],
  "events": [
    {
      "name": "EmergencyUnstakeEvent",
      "discriminator": [
        7,
        90,
        36,
        159,
        199,
        94,
        190,
        125
      ]
    },
    {
      "name": "StakeEvent",
      "discriminator": [
        226,
        134,
        188,
        173,
        19,
        33,
        75,
        175
      ]
    },
    {
      "name": "UnstakeEvent",
      "discriminator": [
        162,
        104,
        137,
        228,
        81,
        3,
        79,
        197
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidDuration",
      "msg": "Invalid staking duration. Only 1, 7, 14, or 30 days are allowed."
    },
    {
      "code": 6001,
      "name": "LockupPeriodNotEnded",
      "msg": "Lockup period has not ended yet."
    },
    {
      "code": 6002,
      "name": "NameTooLong",
      "msg": "Project name cannot exceed 32 characters."
    },
    {
      "code": 6003,
      "name": "InvalidFeeWallet",
      "msg": "Invalid fee wallet."
    }
  ],
  "types": [
    {
      "name": "EmergencyUnstakeEvent",
      "docs": [
        "Emitted when a user performs an emergency unstake."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "user",
            "docs": [
              "The user who performed the emergency unstake."
            ],
            "type": "pubkey"
          },
          {
            "name": "project_id",
            "docs": [
              "The ID of the project from which the unstake occurred."
            ],
            "type": "u64"
          },
          {
            "name": "stake_id",
            "docs": [
              "The unique ID of the stake that was unstaked."
            ],
            "type": "u64"
          },
          {
            "name": "amount",
            "docs": [
              "The original amount of tokens in the stake."
            ],
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "PlatformConfig",
      "docs": [
        "Holds global configuration for the entire staking platform.",
        "There is only one of these accounts, derived from the seed \"platform\"."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "docs": [
              "The authority that can register new projects."
            ],
            "type": "pubkey"
          },
          {
            "name": "project_count",
            "docs": [
              "A counter for the total number of projects, used to derive unique project PDAs."
            ],
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "ProjectConfig",
      "docs": [
        "Stores the configuration for a single staking project."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "project_id",
            "docs": [
              "A unique numerical ID for the project."
            ],
            "type": "u64"
          },
          {
            "name": "authority",
            "docs": [
              "The authority that can update this project's settings (e.g., fees)."
            ],
            "type": "pubkey"
          },
          {
            "name": "token_mint",
            "docs": [
              "The mint of the token that can be staked in this project."
            ],
            "type": "pubkey"
          },
          {
            "name": "vault",
            "docs": [
              "The token vault (a PDA) that holds all staked tokens for this project."
            ],
            "type": "pubkey"
          },
          {
            "name": "name",
            "docs": [
              "A human-readable name for the project."
            ],
            "type": "string"
          },
          {
            "name": "fee_wallet",
            "docs": [
              "The wallet that receives fees from unstaking."
            ],
            "type": "pubkey"
          },
          {
            "name": "token_program",
            "docs": [
              "The token program associated with the mint (SPL Token or Token-2022)."
            ],
            "type": "pubkey"
          },
          {
            "name": "unstake_fee_bps",
            "docs": [
              "The fee in basis points (1/100th of 1%) for a normal unstake."
            ],
            "type": "u16"
          },
          {
            "name": "emergency_unstake_fee_bps",
            "docs": [
              "The fee in basis points for an emergency unstake."
            ],
            "type": "u16"
          }
        ]
      }
    },
    {
      "name": "StakeEvent",
      "docs": [
        "Emitted when a user stakes tokens."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "user",
            "docs": [
              "The user who staked the tokens."
            ],
            "type": "pubkey"
          },
          {
            "name": "project_id",
            "docs": [
              "The ID of the project where the stake was made."
            ],
            "type": "u64"
          },
          {
            "name": "stake_id",
            "docs": [
              "The unique ID of the stake."
            ],
            "type": "u64"
          },
          {
            "name": "amount",
            "docs": [
              "The amount of tokens staked."
            ],
            "type": "u64"
          },
          {
            "name": "duration_days",
            "docs": [
              "The lock-up duration in days."
            ],
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "UnstakeEvent",
      "docs": [
        "Emitted when a user unstakes their tokens after the lock-up period."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "user",
            "docs": [
              "The user who unstaked the tokens."
            ],
            "type": "pubkey"
          },
          {
            "name": "project_id",
            "docs": [
              "The ID of the project from which the unstake occurred."
            ],
            "type": "u64"
          },
          {
            "name": "stake_id",
            "docs": [
              "The unique ID of the stake that was unstaked."
            ],
            "type": "u64"
          },
          {
            "name": "amount",
            "docs": [
              "The original amount of tokens in the stake."
            ],
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "UserStakeInfo",
      "docs": [
        "Holds the details of a single user's stake.",
        "A user can have multiple stake accounts for the same project."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "user",
            "docs": [
              "The user who owns this stake."
            ],
            "type": "pubkey"
          },
          {
            "name": "project_config",
            "docs": [
              "A reference to the `ProjectConfig` this stake belongs to."
            ],
            "type": "pubkey"
          },
          {
            "name": "project_id",
            "docs": [
              "The ID of the project this stake belongs to."
            ],
            "type": "u64"
          },
          {
            "name": "stake_id",
            "docs": [
              "A unique identifier for this stake, provided by the client."
            ],
            "type": "u64"
          },
          {
            "name": "amount",
            "docs": [
              "The amount of tokens staked."
            ],
            "type": "u64"
          },
          {
            "name": "stake_timestamp",
            "docs": [
              "The Unix timestamp when the stake was created."
            ],
            "type": "i64"
          },
          {
            "name": "duration_days",
            "docs": [
              "The duration of the stake lock-up in days."
            ],
            "type": "u32"
          },
          {
            "name": "is_staked",
            "docs": [
              "A flag indicating if the tokens are currently staked."
            ],
            "type": "bool"
          }
        ]
      }
    }
  ]
}